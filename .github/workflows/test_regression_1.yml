name: automation_regression

on:
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'Test Exec ID from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project ID from Xray'
        default: ''
        required: true
        type: string

env:
  ROUTE: src/test/java/suites
  NAME_SPACE: "_"
  
jobs:
  job1:
    name: Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  job2:
    needs: job1
    name: Matrix1
    runs-on: ubuntu-latest
    container:
      image: mavster/ubuntu:20.04-ff51-mvn
      options: --user 0

    strategy:
      matrix:
        Plan: [login, details, pnl]

    steps:
        
      - name: Checkout code
        uses: actions/checkout@v3    
          
      - name: Compile and package our project
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1920x1080x16 -ac &
          export DISPLAY=:99
          export NSS_USE_SHARED_DB=ENABLED
          export $(dbus-launch)
          export NSS_USE_SHARED_DB=ENABLED
          mvn -Dmaven.test.failure.ignore=true test -Dsurefire.suiteXmlFiles=$ROUTE/${{ matrix.Plan }}.xml | tee test_results.txt

      - name: Listar archivos en el directorio 'aws/'
        run: ls -la xray/
        
      - name: Install curl
        run: |
          apt-get update && apt-get install -y curl jq   
           
      - name: "Import results to Xray"
        id: import-to-xray
        uses: mikepenz/xray-action@v3.0.4
        with:
          username: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
          password: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"
          testFormat: "junit"
          testPaths: "**/target/surefire-reports/*.xml"          
          projectKey: ${{ github.event.inputs.projectKey }}
          
      - name: "Use testExecKey"
        run: echo "The testExecKey is ${{ steps.import-to-xray.outputs.testExecKey }}"
        
#      - name: Verify Test Execution Key
#        env:
#          JIRA_BASE_URL: "https://miuelpipes1107.atlassian.net"
#          JIRA_USERNAME: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
#          JIRA_API_TOKEN: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"
#          TEST_EXEC_KEY: ${{ steps.import-to-xray.outputs.testExecKey }}
#        run: |
#          echo "Verifying access to the issue with key: $TEST_EXEC_KEY"
#          RESPONSE=$(curl -s -o response.txt -w "%{http_code}" -u "$JIRA_USERNAME:$JIRA_API_TOKEN" \
#            -X GET "$JIRA_BASE_URL/rest/api/2/issue/$TEST_EXEC_KEY")
#
#          if [ "$RESPONSE" -ne 200 ]; then
#            echo "Error: Cannot access the issue with key $TEST_EXEC_KEY. HTTP Status: $RESPONSE"
#            echo "Response Body: $(cat response.txt)"
#            exit 1
#          fi
#
#          echo "Access to the issue verified successfully."
          
      - name: Jira Login
        uses: frieder/gha-jira-login@v1
        env:
          JIRA_BASE_URL: "https://miuelpipes1107.atlassian.net"
          JIRA_USER_EMAIL: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
          JIRA_API_TOKEN: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"

      - name: Update Fields
        id: updatefields
        uses: frieder/jira-issue-updater@v1.1.0
        with:
          retries: 1
          retryDelay: 10
          timeout: 2000
          failOnError: true
          # either one of the following three config option formats of 'issue' is valid
          issue: ${{ steps.import-to-xray.outputs.testExecKey }}          
          summary: Some fancy title
          description: Plaintext only    

#      - name: Update Test Execution Name in Jira
#        env:
#          JIRA_BASE_URL: "https://miuelpipes1107.atlassian.net"
#          JIRA_USERNAME: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
#          JIRA_API_TOKEN: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"
#          TEST_EXEC_KEY: ${{ steps.import-to-xray.outputs.testExecKey }}
#          NEW_SUMMARY: "Nuevo nombre para la ejecución de prueba"
#        run: |
#          echo "Actualizando el nombre de la ejecución de prueba en Jira..."
#
#          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X PUT -u "$JIRA_USERNAME:$JIRA_API_TOKEN" \
#            -H "Content-Type: application/json" \
#            --data '{
#              "fields": {
#                "summary": "'"$NEW_SUMMARY"'"
#              }
#            }' \
#            "$JIRA_BASE_URL/rest/api/2/issue/$TEST_EXEC_KEY")
#
#          if [ "$RESPONSE" -ne 204 ]; then
#            echo "Error: No se pudo actualizar el nombre de la ejecución de prueba en Jira. Código de respuesta: $RESPONSE"
#            exit 1
#          fi
#
#          echo "Nombre de la ejecución de prueba actualizado correctamente en Jira"  
        
#      - name: Update Test Execution Name in Jira
#        env:
#          JIRA_BASE_URL: "https://miuelpipes1107.atlassian.net"
#          JIRA_USERNAME: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
#          JIRA_API_TOKEN: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"
#          TEST_EXEC_KEY: ${{ steps.import-to-xray.outputs.testExecKey }}  # Clave del issue en Jira
#          NEW_SUMMARY: "Nuevo nombre para la ejecución de prueba"
#        run: |
#          echo "Actualizando el nombre de la ejecución de prueba en Jira..."
#
#          # Realizar la solicitud para actualizar el issue en Jira
#          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X PUT -u "$JIRA_USERNAME:$JIRA_API_TOKEN" \
#            -H "Content-Type: application/json" \
#            --data '{
#              "fields": {
#                "summary": "'"$NEW_SUMMARY"'"
#              }
#            }' \
#            "$JIRA_BASE_URL/rest/api/2/issue/$TEST_EXEC_KEY")
#
#          # Verificar si la solicitud fue exitosa
#          if [ "$RESPONSE" -ne 204 ]; then
#            echo "Error: No se pudo actualizar el nombre de la ejecución de prueba en Jira. Código de respuesta: $RESPONSE"
#            exit 1
#          fi
#
#          echo "Nombre de la ejecución de prueba actualizado correctamente en Jira"
   
