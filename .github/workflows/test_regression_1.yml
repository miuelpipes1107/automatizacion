name: automation_regression

on:
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'Test Exec ID from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project ID from Xray'
        default: ''
        required: true
        type: string  

env:
  ROUTE: src/test/java/suites
  NAME_SPACE: "_"
  
jobs:
  job1:
    name: Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  job2:
    needs: job1
    name: Matrix1
    runs-on: ubuntu-latest
    container:
      image: mavster/ubuntu:20.04-ff51-mvn
      options: --user 0

    strategy:
      matrix:
        Plan: [login, details, pnl]

    steps:
        
      - name: Checkout code
        uses: actions/checkout@v3    
          
      - name: Compile and package our project
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1920x1080x16 -ac &
          export DISPLAY=:99
          export NSS_USE_SHARED_DB=ENABLED
          export $(dbus-launch)
          export NSS_USE_SHARED_DB=ENABLED
          mvn -Dmaven.test.failure.ignore=true test -Dsurefire.suiteXmlFiles=$ROUTE/${{ matrix.Plan }}.xml | tee test_results.txt

      - name: Listar archivos en el directorio 'aws/'
        run: ls -la xray/
        
      - name: Install curl
        run: |
          apt-get update && apt-get install -y curl jq
      
      - name: Create test execution JSON
        run: |
          echo '{
            "fields": {
              "summary": "Test github ${{ matrix.Plan }}",
              "issuetype": { "id": "10008" },
              "components": [
                { "name": "${{ matrix.Plan }}" },
                { "name": "${{ matrix.Plan }}" }
              ],
              "labels": ["ocultar"]
            }
          }' > test_execution.json
          
      - name: Print Inputs
        id: set-inputs
        run: |
          echo "Project ID: ${{ github.event.inputs.projectKey }}"
          echo "::set-output name=testPlanKey::${{ github.event.inputs.testExecKey }}"              
           
      - name: "Import results to Xray"
        id: import-to-xray
        uses: mikepenz/xray-action@v3.0.4
        with:
          username: ${{ secrets.XRAY_CLIENT_ID }}
          password: ${{ secrets.XRAY_CLIENT_SECRET }}
          testFormat: "junit"
          testPaths: "**/target/surefire-reports/*.xml"          
          projectKey: ${{ github.event.inputs.projectKey }}
          testExecutionJson: "./test_execution.json"
          
      - name: "Associate the test execution with the test plan"
        id: import-to-test-plan
        uses: mikepenz/xray-action@v3.0.4
        with:
          username: ${{ secrets.XRAY_CLIENT_ID }}
          password: ${{ secrets.XRAY_CLIENT_SECRET }}          
          projectKey: ${{ github.event.inputs.projectKey }}
          testExecKey: ${{ steps.import-to-xray.outputs.testExecKey }}
          testPlanKey: ${{ steps.set-inputs.outputs.testPlanKey }}
          
      - name: "Use projectKey"
        run: echo "The projectKey is ${{ steps.import-to-xray.outputs.projectKey }}"
        
      - name: "Use testExecKey"
        run: echo "The testExecKey is ${{ steps.import-to-xray.outputs.testExecKey }}"
        
      - name: "Use testPlanKey"
        run: echo "The testPlanKey is ${{ steps.set-inputs.outputs.testPlanKey }}"  
 