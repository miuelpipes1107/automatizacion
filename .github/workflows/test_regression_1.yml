name: automation_regression

on:
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'Test Exec ID from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project ID from Xray'
        default: ''
        required: true
        type: string

env:
  ROUTE: src/test/java/suites
  NAME_SPACE: "_"
  RAY_API_BASE_URL: "https://xray.cloud.getxray.app"
  XRAY_CLIENT_ID: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA" # Reemplazar con tu ID de cliente Xray
  XRAY_CLIENT_SECRET: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732" # Reemplazar con tu secreto de cliente Xray

jobs:
  job1:
    name: Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  job2:
    needs: job1
    name: Matrix1
    runs-on: ubuntu-latest
    container:
      image: mavster/ubuntu:20.04-ff51-mvn
      options: --user 0

    strategy:
      matrix:
        Plan: [login, details, pnl]
        testExecKey: [null]

    steps:
        
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup testExecKey
        id: setup-test-exec-key
        shell: bash
        env:
          TEST_EXEC_KEYS: ${{ github.event.inputs.testExecKeys }}
        run: |
          IFS=',' read -ra KEYS <<< "$TEST_EXEC_KEYS"
          case ${{ matrix.Plan }} in
            login)
              echo "testExecKey=${KEYS[0]}" >> $GITHUB_ENV
              ;;
            details)
              echo "testExecKey=${KEYS[1]}" >> $GITHUB_ENV
              ;;
            pnl)
              echo "testExecKey=${KEYS[2]}" >> $GITHUB_ENV
              ;;
            *)
              echo "testExecKey=unknown" >> $GITHUB_ENV
              ;;
          esac
          
#      - name: Setup testExecKey
#        id: setup-test-exec-key
#        shell: bash
#        env:
#          TEST_EXEC_KEYS: ${{ github.event.inputs.testExecKeys }}
#        run: |
#          IFS=',' read -ra KEYS <<< "$TEST_EXEC_KEYS"
#          case ${{ matrix.Plan }} in
#            login)
#              echo "::set-output name=testExecKey::${KEYS[0]}"
#              ;;
#            details)
#              echo "::set-output name=testExecKey::${KEYS[1]}"
#              ;;
#            pnl)
#              echo "::set-output name=testExecKey::${KEYS[2]}"
#              ;;
#            *)
#              echo "::set-output name=testExecKey::unknown"
#              ;;
#          esac    
          
      - name: Debug testExecKey
        run: |
         echo "testExecKey: ${{ env.testExecKey }}"
    
        
      - name: Compile and package our project
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1920x1080x16 -ac &
          export DISPLAY=:99
          export NSS_USE_SHARED_DB=ENABLED
          export $(dbus-launch)
          export NSS_USE_SHARED_DB=ENABLED
          mvn -Dmaven.test.failure.ignore=true test -Dsurefire.suiteXmlFiles=$ROUTE/${{ matrix.Plan }}.xml | tee test_results.txt

      - name: Listar archivos en el directorio 'aws/'
        run: ls -la xray/
        
#      - name: Install curl
#        run: |
#          apt-get update && apt-get install -y curl jq    
#        
#      - name: Create Test Execution in Xray
#        id: create-test-execution
#        env:
#          TEST_EXEC_KEY: ${{ env.testExecKey }}
#        run: |
#          # AutenticaciÃ³n con la API de Xray
#          AUTH_RESPONSE=$(curl -s -X POST "$XRAY_API_BASE_URL/authenticate" \
#            -H "Content-Type: application/json" \
#            -d '{"client_id": "'"$XRAY_CLIENT_ID"'", "client_secret": "'"$XRAY_CLIENT_SECRET"'"}')
#          TOKEN=$(echo $AUTH_RESPONSE | jq -r '.token')
#
#          # Crear Test Execution
#          CREATE_RESPONSE=$(curl -s -X POST "$XRAY_API_BASE_URL/testexecutions" \
#            -H "Content-Type: application/json" \
#            -H "Authorization: Bearer $TOKEN" \
#            -d '{
#              "fields": {
#                "project": {"key": "'"${{ github.event.inputs.projectKey }}"'"},
#                "summary": "Execution results for '"${{ matrix.Plan }}"'",
#                "issuetype": {"name": "Test Execution"}
#              }
#            }')
#          EXECUTION_KEY=$(echo $CREATE_RESPONSE | jq -r '.key')
#
#          echo "::set-output name=testExecKey::$EXECUTION_KEY"  
            
      - name: "Import results to Xray"
        uses: mikepenz/xray-action@v3.0.4
        with:
          username: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
          password: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"
          testFormat: "junit"
          testPaths: "**/target/surefire-reports/*.xml"
          testExecKey: ${{ env.testExecKey }}
          projectKey: ${{ github.event.inputs.projectKey }}          

      - name: Print testExecKey for debugging
        run: echo "Test Exec Key is ${{ env.testExecKey }}
