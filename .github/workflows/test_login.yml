# The name of the workflow
name: automation_login

# Events that trigger the execution of the workflow
on:
  push:
    # Allows you to specify the branches on which the workflow will be triggered
    branches: [ login ]
  pull_request:  
    branches: [ login ]
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'Test Exec ID from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project ID from Xray'
        default: ''
        required: true
        type: string
      
# Define the environment variables used in the workflow
env:
  ROUTE: src/test/java/suites
  NAME_SPACE: "_"

# Define the jobs that will be executed in the workflow
jobs:

  job1:
    # Name of the job  
    name: Requeriments
    # Configure the workflow to run on an instanc
    runs-on: ubuntu-latest
    # List of Steps to be executed in the job
    steps:
        # Runs a single command using the runners shell
      - name: Checkout code
        uses: actions/checkout@v2
        
  job2:
    # Indicates the execution and completion of the job or jobs to star  
    needs: job1
    name: Matrix1
    # Configure the workflow to run on an instance
    runs-on: ubuntu-latest
    
    # allows you to configure a docker container for the job
    container:
      image: mavster/ubuntu:20.04-ff51-mvn
      options: --user 0
    
    # "matrix" strategy to generate multiple job execution instances  
    strategy:
      matrix:
        # contains xml files that are the suites for the execution of the classes  
        Plan: [login]

    steps:
        # check the repository and download the instance(ubuntu)
      - name: check our repository and download it to our instance
        uses: actions/checkout@v3
        
        # Runs a single command using the runners sh
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Compile and package our project
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1920x1080x16 -ac &
          export DISPLAY=:99
          export NSS_USE_SHARED_DB=ENABLED
          export $(dbus-launch)
          export NSS_USE_SHARED_DB=ENABLED
          mvn -Dmaven.test.failure.ignore=true test -Dsurefire.suiteXmlFiles=$ROUTE/${{ matrix.Plan }}.xml | tee test_results.txt
      
      - name: Listar archivos en el directorio 'aws/'
        run: |
          ls -la xray/
          
      - name: "Import results to Xray"
        uses: mikepenz/xray-action@v3.0.4
        with:
          username: "687D7A60E34D4FF5AEF1FBF7CBC4B8EA"
          password: "cd8d864267f5bd255dfd535afc5075dccc7a56c9cb86e8bc8563ca34e5480732"
          testFormat: "junit"
          testPaths: "**/target/surefire-reports/*.xml"
          testExecKey: "A3-31"
          projectKey: "A3"
          
          
#          testPaths: "**/target/surefire-reports/*.xml"